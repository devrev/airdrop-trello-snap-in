openapi: 3.0.0
info:
  title: Trello REST API
  version: 0.0.1
  description: >-
    This document contains information about how to authenticate with the Trello
    API.
servers:
  - url: 'https://api.trello.com/1/'
components:
  securitySchemes:
    APIKey:
      type: apiKey
      in: query
      name: key
    APIToken:
      in: query
      name: token
      type: apiKey
  schemas: {}
security:
  - APIKey: []
    APIToken: []
paths:
  '/boards/{id}/cards':
    get:
      description: >-
        Get all of the open Cards on a Board. See [Nested
        Resources](/cloud/trello/guides/rest-api/nested-resources/) for more
        information.
      parameters:
        - id
        - limit
        - before
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Card'
              examples:
                sample:
                  summary: Example response
                  value:
                    - id: "card_id_123"
                      badges:
                        attachments: 1
                        fogbugz: ""
                        checkItems: 0
                        checkItemsChecked: 0
                        checkItemsEarliestDue: null
                        comments: 0
                        description: false
                        due: null
                        dueComplete: false
                        lastUpdatedByAi: false
                        start: null
                        externalSource: null
                        attachmentsByType:
                          trello:
                            board: 0
                            card: 0
                        location: false
                        votes: 0
                        maliciousAttachments: 0
                        viewingMemberVoted: false
                        subscribed: false
                      checkItemStates: []
                      closed: false
                      dueComplete: false
                      dateLastActivity: "2025-06-06T06:08:05.912Z"
                      desc: ""
                      descData:
                        emoji: {}
                      due: null
                      dueReminder: null
                      email: null
                      idBoard: "board_id_456"
                      idChecklists: []
                      idList: "list_id_789"
                      idMembers: []
                      idMembersVoted: []
                      idShort: 1
                      idAttachmentCover: null
                      labels: []
                      idLabels: []
                      manualCoverAttachment: false
                      name: "Card Name"
                      nodeId: "node_id_abc"
                      pinned: false
                      pos: 140737488355328
                      shortLink: "short_link_xyz"
                      shortUrl: "https://trello.com/c/short_link_xyz"
                      start: null
                      subscribed: false
                      url: "https://trello.com/c/short_link_xyz/1-card-name"
                      cover:
                        idAttachment: null
                        color: null
                        idUploadedBackground: null
                        size: "normal"
                        brightness: "dark"
                        idPlugin: null
                      isTemplate: false
                      cardRole: null
                      mirrorSourceId: null
                      attachments: [
                        {
                          id: "689c8fbf0d9f05de7564d93d",
                          bytes: null,
                          date: "2025-08-13T13:14:39.839Z", 
                          edgeColor: null,
                          idMember: "6752eb529b14a3446b75e69c",
                          isMalicious: false,
                          isUpload: false,
                          mimeType: "",
                          name: "devrev cover",
                          previews: [],
                          url: "https://www.atom.com/name/Test",
                          pos: 140737488355328,
                          fileName: "Test"
                        }
                      ]
        '429':
          description: Rate limit exceeded.
          headers:
            Retry-After:
              description: |-
                An HTTP-date string (RFC 7231) indicating when to retry the request.
                Example: 'Wed, 21 Oct 2015 07:28:00 GMT'
              schema:
                type: string
  '/members/{id}':
    get:
      description: Get a member
      parameters:
        - id
        - actions
        - boards
        - boardBackgrounds
        - boardsInvited
        - boardsInvited_fields
        - boardStars
        - cards
        - customBoardBackgrounds
        - customEmoji
        - customStickers
        - fields
        - notifications
        - organizations
        - organization_fields
        - organization_paid_account
        - organizationsInvited
        - organizationsInvited_fields
        - paid_account
        - savedSearches
        - tokens
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Member'
        '429':
          description: Rate limit exceeded.
          headers:
            Retry-After:
              description: |-
                An HTTP-date string (RFC 7231) indicating when to retry the request.
                Example: 'Wed, 21 Oct 2015 07:28:00 GMT'
              schema:
                type: string
  '/members/{id}/boards':
    get:
      description: Lists the boards that the user is a member of.
      parameters:
        - id
        - filter
        - fields
        - lists
        - organization
        - organization_fields
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Board'
              examples:
                sample:
                  summary: Example response
                  value:
                    - id: "exampleBoardId"
                      nodeId: "ari:cloud:trello::board/workspace/exampleOrgId/exampleBoardId"
                      name: "Example Board Name"
                      desc: ""
                      descData: null
                      closed: false
                      dateClosed: null
                      idOrganization: "exampleOrgId"
                      idEnterprise: null
                      pinned: false
                      starred: false
                      url: "https://trello.com/b/exampleShortLink/example-board-name"
                      shortLink: "exampleShortLink"
                      subscribed: false
                      labelNames:
                        green: ""
                        yellow: ""
                        orange: ""
                      powerUps: []
                      dateLastActivity: "2025-03-26T12:04:13.067Z"
                      dateLastView: "2025-06-06T06:07:13.134Z"
                      shortUrl: "https://trello.com/b/exampleShortLink"
                      idTags: []
                      datePluginDisable: null
                      creationMethod: null
                      ixUpdate: "1"
                      templateGallery: null
                      enterpriseOwned: false
                      idBoardSource: null
                      premiumFeatures:
                        - "additionalBoardBackgrounds"
                        - "additionalStickers"
                        - "customBoardBackgrounds"
                        - "customEmoji"
                        - "customStickers"
                        - "plugins"
                      idMemberCreator: "exampleMemberId"
                      type: null
                      memberships:
                        - id: "exampleMembershipId"
                          idMember: "exampleMemberId"
                          memberType: "admin"
                          unconfirmed: false
                          deactivated: false
        '429':
          description: Rate limit exceeded.
          headers:
            Retry-After:
              description: |-
                An HTTP date object indicating when to retry the request.
              schema:
                type: string
                format: date-time
  '/organizations/{id}/members':
    get:
      description: List the members in a Workspace
      parameters:
        - id
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  oneOf:
                    - $ref: '#/components/schemas/Member'
              examples:
                sample:
                  summary: Example response
                  value:
                    - id: "examplesaasID1"
                      fullName: "My full name"
                      username: "examplesaas1"
                      lastActive: "2025-04-06T08:37:21.065Z"
        '429':
          description: Rate limit exceeded.
          headers:
            Retry-After:
              description: |-
                An HTTP-date string (RFC 7231) indicating when to retry the request.
                Example: 'Wed, 21 Oct 2015 07:28:00 GMT'
              schema:
                type: string
  '/cards/{id}/attachments':
    get:
      description: List the attachments on a card
      parameters:
        - name: id
          in: path
          description: The ID of the Card
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: All or a comma-separated list of attachment fields
          required: false
          schema:
            type: string
            default: all
        - name: filter
          in: query
          description: Use cover to restrict to just the cover attachment
          required: false
          schema:
            type: string
            default: "false"
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Attachment'
              examples:
                sample:
                  summary: Example response
                  value:
                    - id: "5abbe4b7ddc1b351ef961414"
                      bytes: "<string>"
                      date: "2018-10-17T19:10:14.808Z"
                      edgeColor: "yellow"
                      idMember: "5abbe4b7ddc1b351ef961414"
                      isUpload: false
                      mimeType: ""
                      name: "Deprecation Extension Notice"
                      previews: []
                      url: "https://admin.typeform.com/form/RzExEM/share#/link"
                      pos: 1638
        '429':
          description: Rate limit exceeded.
          headers:
            Retry-After:
              description: |-
                An HTTP-date string (RFC 7231) indicating when to retry the request.
                Example: 'Wed, 21 Oct 2015 07:28:00 GMT'
              schema:
                type: string
  '/cards/{idCard}/attachments/{idAttachment}/download/{fileName}':
    get:
      description: >-
        Download an attachment file from a card. This endpoint is the ONLY endpoint in this API
        that requires OAuth 1.0a authorization with oauth_consumer_key and oauth_token encoded
        in the Authorization header (unlike all other endpoints which use simple API key/token
        query parameters). The URL format includes the card ID, attachment ID, and the original
        filename. This replaces the previous public S3 URLs that required no authentication.

        How to execute this with CURL: 
        ```
        curl -X GET "https://api.trello.com/1//cards/{idCard}/attachments/{idAttachment}/download/{fileName}" -H "Authorization: OAuth oauth_consumer_key=\"{oauth_consumer_key}\", oauth_token=\"{oauth_token}\""
        ```
      parameters:
        - name: idCard
          in: path
          description: The ID of the Card
          required: true
          schema:
            type: string
        - name: idAttachment
          in: path
          description: The ID of the Attachment
          required: true
          schema:
            type: string
        - name: fileName
          in: path
          description: The original filename of the attachment (can be obtained from the fileName property or parsed from the url property)
          required: true
          schema:
            type: string
      security:
        - APIKey: []
          APIToken: []
      responses:
        '200':
          description: The attachment file content
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
            image/*:
              schema:
                type: string
                format: binary
            application/pdf:
              schema:
                type: string
                format: binary
            text/*:
              schema:
                type: string
                format: binary
        '401':
          description: Unauthorized - Invalid or missing API key/token
        '404':
          description: Card, attachment, or file not found
        '429':
          description: Rate limit exceeded.
          headers:
            Retry-After:
              description: |-
                An HTTP-date string (RFC 7231) indicating when to retry the request.
                Example: 'Wed, 21 Oct 2015 07:28:00 GMT'
              schema:
                type: string
